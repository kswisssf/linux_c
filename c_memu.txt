i. 前言：


C语言 = 存储（数据管理）+  处理（数据处理）+  输出（数据交互）

C语言一切都是用地址（编号）在运作！来完成处理数据（算法）和存储数据（数据结构）两个工作！
(把内存空间假想成按照内存总大小按以字节为单位的一个个连续的格子)

一、以单个字节为最小访问单位，用地址来编号每个字节单元！

二、用各种类型名字方式定义不同连续内存空间的访问范围！

	1）变量类型是一种定义固定大小的内存段（int4字节 char1字节）。
	2）结构体是一段包涵各个内型变量的内存段。
	3）数组是一段同类型变量集合的连续内存段。

	4）函数是一段综合程序的连续内存段。（函数指针定义了这个指针，就意味着可以访问函数所拥有的内存段，函数首地址赋给了指针，即所谓的指针指向了函数，这个指针就是函数首地址的变量名字，间接来说，函数首地址就是函数名，函数指针就是函数首地址，那么函数指针＝函数名）
	5）malloc是申请一段连续的内存段。

三、指针：（指向任意内存段首地址，并保持和其指向的内存段类型一致，就可以随意访问任何内存上的资源，如变量、结构体、函数）
同类型的指针只要指向其要访问的内存段的首地址，就可以直接把指针变量放到要运行的地方，相当于完成对指向的内存段的访问和调用！

四、通过指针可以实现对数据的随意调度和操控！

ii、目录:

   linnux_app:
   	|--app_menu.txt  
	|--README.md
   	|--common  	  
   	|--IPC
	   |--pipe  	
	   |--queue  
	   |--semaphore  
	   |--shmem_1  
	   |--shmem_2  
	   \--signal  
	|--pthread_base  
	|--pthread_sync  
	   |--sync_book   	
	   |--mutex_sync  
	   |--rwlock_sync  
	   |--cond_sync 
	   |--
  	|--Dir
	   |--dir_base 
	   |--dir_ctrl
	   |--dir_dup
	   |--dir_fcntl 
  	|--File_IO
	   |--
	|--Func_design
	   |--   
	\--stdio  	
	   |--errno  
	   |--fflush  
	   |--printf
	   |--
      

三、预增加
  1.函数指针调用和回调函数差异 (2020/03/15)
  2.回调函数深度操作, (2020/03/15)
  3.inline (2020/03/24)
  4.C字符串——库函数系列（strcpy/strcat/strcmp/str/strncpy/strncat/
    strncmp/strstr/strchr/strrchr/strspn/strcspn/strtok/strerror/strpbrk/atoi）
  5.字符分类函数：isalnum/isalpha/iscntrl/isdigit/isgraph/islower/
  6.字符转换
  7.位操作
  8.strchr函数功能为在一个串中查找给定字符的第一个匹配之处.
  9.strdup（）函数是c语言中常用的一种字符串拷贝库函数，一般和free（）函数成对出现。
    
      

